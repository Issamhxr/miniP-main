/** @typedef {typeof __propDef.props}  BxCommentAddProps */
/** @typedef {typeof __propDef.events}  BxCommentAddEvents */
/** @typedef {typeof __propDef.slots}  BxCommentAddSlots */
/**
 * [Go to docs](https://svelte-boxicons.codewithshin.com)
 * ## Props
 * @prop export let size = ctx.size || '24';
 * @prop export let viewBox = ctx.viewBox || '0 0 24 24';
 * @prop export let role = ctx.role || 'img';
 * @prop export let color = ctx.color || 'currentColor';
 * @prop export let strokeWidth = ctx.strokeWidth || '1.5';
 * @prop export let ariaLabel = 'bx comment add';
 */
export default class BxCommentAdd extends SvelteComponentTyped<{
    [x: string]: any;
    size?: any;
    viewBox?: any;
    role?: any;
    color?: any;
    strokeWidth?: any;
    ariaLabel?: string | undefined;
}, {
    click: MouseEvent;
    keydown: KeyboardEvent;
    keyup: KeyboardEvent;
    focus: FocusEvent;
    blur: FocusEvent;
    mouseenter: MouseEvent;
    mouseleave: MouseEvent;
    mouseover: MouseEvent;
    mouseout: MouseEvent;
} & {
    [evt: string]: CustomEvent<any>;
}, {}> {
}
export type BxCommentAddProps = typeof __propDef.props;
export type BxCommentAddEvents = typeof __propDef.events;
export type BxCommentAddSlots = typeof __propDef.slots;
import { SvelteComponentTyped } from "svelte";
declare const __propDef: {
    props: {
        [x: string]: any;
        size?: any;
        viewBox?: any;
        role?: any;
        color?: any;
        strokeWidth?: any;
        ariaLabel?: string | undefined;
    };
    events: {
        click: MouseEvent;
        keydown: KeyboardEvent;
        keyup: KeyboardEvent;
        focus: FocusEvent;
        blur: FocusEvent;
        mouseenter: MouseEvent;
        mouseleave: MouseEvent;
        mouseover: MouseEvent;
        mouseout: MouseEvent;
    } & {
        [evt: string]: CustomEvent<any>;
    };
    slots: {};
};
export {};
